無理をしないための取り組み
==========================

基本的な考え方
--------------

| 「無理をしない」
| ＝
| **「本当に頑張るべきところだけ頑張る」**

.. revealjs-break::

* 単機能な物を作る
* 自分の道具を作る
* 機能の担保にこだわらない

単機能な物を作る
----------------

「たった一つのこと」 **だけ** を実現するものを作る。

.. revealjs-break::

「たった一つのこと」 **だけ** を実現するものを作る。

* 機能の幅が広いと、完成が遠くなり「達成感を得る」までが遠ざかる。
* | 「未完成な多機能」より「完成済み単機能」
  | 例: grepよりreplace

.. revealjs-fragments::

    **「こういうのでいいんだよ」の精神**

.. revealjs-break::

実例: :pypi:`qrcode`

テキストなどを受け取り。QRコードのPNGやSVGを生成する…

.. revealjs-fragments::

    …これだけをするライブラリ。

    その分。使い方も非常にシンプルだし、他ライブラリとの連携も容易。

.. revealjs-break::

| 実例: :pypi:`qrcode`
|

.. code-block:: python

    import qrcode

    img = qrcode.make('Some data here')
    img.save("some_file.png")


.. revealjs-break::

よくやるアプローチ

* 〇〇をPythonで扱えるようにする
* △△が公開しているWeb APIのラッパー
* ◇◇上で☓☓を扱えるようにする

自分の道具を作る
----------------

「自分が普段遣いする」 **ため** のライブラリを作る。

.. revealjs-break::

「自分が普段遣いする」 **ため** のライブラリを作る。

* 「欲しいけど見つからない」は、大事なモチベーションの源泉。
* 一歩踏み出して「じゃあ作るか」となると良い。

.. revealjs-fragments::

    愛着があるものほど、メンテナンスしやすいし、責任感も湧く。

.. revealjs-break::

実例: :pypi:`oEmbedPy`

* サイトURLからoEmbedコンテンツを取得するライブラリ。
* SphinxドキュメントにoEmbed対応コンテンツを楽に埋め込みたくて作った。
* 古いPythonでの実装は存在するが、古すぎるのでPython 3.x系専用に自作。

https://oembed.com/

機能の担保にこだわらない
------------------------

精緻なユニットテストを書いておけるのは望ましいのだが、ここにリソースを取られると疲れてしまう。

* 趣味前提なら **「取りあえず動くのでヨシ！！」「公開したので正義」** ぐらいの気持ちで。

.. revealjs-break::

気になるなら：

* 最初のうちは簡単なe2eテストや機能テストっぽいのだけ用意する。
* リンターやフォーマッターは導入したほうがいい。

  * 困ったら、Ruffにすべてを委ねよう。

Ex: サブ項目
------------

* なるべくさっさと公開する

  * 「PyPIにあるか？」はそれなりに大事。
  * uvなら割とすぐ公開できる。

* 公開後の想定利用者数は「2人（自分+α）」ぐらいを想定すると良い。

  * | 「自分のために作ってとりあえず公開した」ら
    | 「実は小さな需要があった」ぐらいの気持ちでいる。

Ex: 慣れてきたら
----------------

* 「型」を作っておく

  * 「必要最低限」を準備する
  * GitHubのテンプレートリポジトリ
  * Cookiecutter

* ドキュメントとか

  * ガイドは「ない」より「ある」ほうが良い。
  * 頑張れるなら英語で
  * Sphinxオススメ