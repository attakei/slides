PyPIデビュー手前の人のためのPyPI体験記
======================================

.. revealjs-break::
    :notitle:

.. container:: power-sentence

    | PyPIデビューしてますか？
    | or
    | PyPIデビューしてみようと思ったことありますか？

3行で説明する大雑把な「PyPIデビュー」
-------------------------------------

* 「これ何度も使うな？」というコードをひとまとめにする
* 実コード以外にも必要なファイルを揃えてパッケージを作成して
* PyPIにアップロードする

デビューしていない方向け
------------------------

.. container:: center

    .. figure:: _images/pypi-debut.png
        :width: 75%
        :align: center

PyPIデビュー時/デビュー後の悩みごと
-----------------------------------

※以下、個人の感想です

* グローバルな名前空間を1個使って良いものか
* パブリックなパッケージにしか出来ない
* ↑を踏まえて、PyPIにいきなりアップロードすることに抵抗がある

※グローバルな名前空間
----------------------

| PyPIに登録するパッケージ名は単一の名前空間上に登録される。
| （Pythonのライブラリとしてはサブパッケージは可能）

そうじゃない例：

* npm(Node.js): ``@attakei/sync-nextjs-rewrites``
* Packagist(PHP): ``phpunit/phpunit``

.. revealjs-break::

| PyPIに登録するパッケージ名は単一の名前空間上に登録される。
| （Pythonのライブラリとしてはサブパッケージは可能）

=> メンテナンスを放置したときに、利用者がちょっと困る...かも？

.. revealjs-break::

（まだ、おとぎ話です）

  とあるパッケージ ``errcron`` があります。
  たまたま使ってた人が改善してみたのですが、作者が放置気味のため、
  「同じ機能を提供している」のに改善版の反映が出来ません。

  仕方がないので、 ``errcron3`` を公開することにしました。

  **そして、カオスが始まります...**

※パブリックにしかならない
--------------------------

PyPI自体に登録するパッケージはプライベートに出来ない。

=> 「社内限定の特定用途ライブラリ」「PyPIにあるやつに固有なチューニングしたい」

よくある解決例
--------------

* アーカイブを直接配布する
* Gitリポジトリだけ公開する
* 専用のパッケージレジストリを用意する

.. revealjs-break::

* | アーカイブを直接配布する
  | ``pip install /opt/my-package.whl``
* | Gitリポジトリだけ公開する
  | ``pip install git+https://github.com/attakei/my-package.git`` 
* | **専用のパッケージレジストリを用意する**
  | ↑今日のお題はここ！
